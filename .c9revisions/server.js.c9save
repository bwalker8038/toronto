{"ts":1341837675982,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"\n// Toronto Messaging Server\n// ========================\n\n// Project dependencies\n// --------------------\n\n// File/Path Handling\nvar fs = require('fs'),\n    \n// Url Handling\n    url = require('url'),\n    \n// Application DSL\n    express = require('express'),\n\n// Create the express application\n   app = module.exports = express.createServer(),\n\n   DNode = require('dnode'),\n   BackboneDNode = require('backbone-dnode');\n\n\n// Load Application Configuration\n// ------------------------------\nvar env  = process.env.NODE_ENV || 'development';\nvar yaml = require('yaml-config');\n    exports = module.exports = config = yaml.readConfig('./config/config.yaml', env);\n\n\n// Load Dynamic Helpers\n// --------------------\nvar helper_path = __dirname + '/app/helpers',\n    helper_file = fs.readdirSync(helper_path);\n\nhelper_file.forEach(function(file) {\n    require(helper_path+'/'+file)(app);\n});\n\n\n// Load Database Config\n// --------------------\nrequire('./config/db.js');\n\n\n// Load Models\n//------------\nvar models_path = __dirname + '/app/models',\n    model_files = fs.readdirSync(models_path);\n    \nmodel_files.forEach(function(file) {\n    if(file == 'user.js') {\n        User = require(models_path+'/'+file);\n    } else {\n        require(models_path+'/'+file);\n    }\n});\n\n\n// Bootstrap the application\n// -------------------------\nrequire('/config/config').boot(app);\n\n\n// Load Controllers\n// ----------------\nvar controllers_path = __dirname + '/app/controllers',\n    controller_files = fs.readdirSync(controllers_path);\n    \ncontroller_files.forEach(function(file) {\n    require(controllers_path+'/'+file)(app);\n});\n\n\n// Initialize\n// ----------\n\n// Start up the server\nvar port = process.env.PORT || 8000;\n    \napp.listen(port, function() {\n    console.log(\"Server configured for: \" + (global.process.env.NODE_ENV) + \" environment.\");\n    console.log(\"Server listening on port: \" + port);\n});\n\n\n// General error handling\nfunction errorHandler(client, conn) {\n    conn.on('error', function(e) {\n      console.log('Conn Error: ', e.stack);\n    });\n}\n\n// Attatch the DNode middleware and connect\nDNode()\n    .use(errorHandler)\n    .use(BackboneDNode.pubsub({\n      publish: pub,\n      subscribe: sub\n    }))\n    .use(BackboneDNode.crud({\n      database: database\n    }))\n    .listen(app);"]],"start1":0,"start2":0,"length1":0,"length2":2281}]],"length":2281}
